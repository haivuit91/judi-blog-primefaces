package model.entities;
// Generated Jul 25, 2014 9:34:05 AM by Hibernate Tools 3.6.0


import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Type generated by hbm2java
 */
@Entity
@Table(name="type"
    ,catalog="db_judiwebsite"
)
public class Type  implements java.io.Serializable {


     private Integer typeId;
     private String typeName;
     private boolean active;
     private List<Project> projects = new ArrayList<Project>();

    public Type() {
    }

	
    public Type(String typeName, boolean active) {
        this.typeName = typeName;
        this.active = active;
    }
    public Type(String typeName, boolean active, List<Project> projects) {
       this.typeName = typeName;
       this.active = active;
       this.projects = projects;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="typeID", unique=true, nullable=false)
    public Integer getTypeId() {
        return this.typeId;
    }
    
    public void setTypeId(Integer typeId) {
        this.typeId = typeId;
    }

    
    @Column(name="typeName", nullable=false, length=45)
    public String getTypeName() {
        return this.typeName;
    }
    
    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }

    
    @Column(name="active", nullable=false)
    public boolean isActive() {
        return this.active;
    }
    
    public void setActive(boolean active) {
        this.active = active;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="type")
    public List<Project> getProjects() {
        return this.projects;
    }
    
    public void setProjects(List<Project> projects) {
        this.projects = projects;
    }

    @Override
    public boolean equals(Object obj) {
        return true;
    }

}


